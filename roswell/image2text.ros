#!/bin/sh
#|-*- mode:lisp -*-|#
#|
exec ros -Q -L sbcl-bin -m image2text -- $0 "$@"
|#
(progn ;;init forms
  (ros:ensure-asdf)
  #+quicklisp(ql:quickload '(:alexandria :bordeaux-threads :cl-cpus :opticl :unix-opts) :silent t)
  (asdf:load-system :cl-image2text)
  (in-package #:cl-image2text))

(defun image2text (filename &key x y stream)
  (write-text (convert-image-to-text (read-image filename :x x :y y)) :stream stream))

(defvar *version* 
  (with-open-file 
      (stream (merge-pathnames #P"version.sexp" (asdf:system-source-directory :cl-image2text))
              :if-does-not-exist nil)
    (when stream (read stream nil))))

(unix-opts:define-opts
  (:name :help
   :description "get program version and usage info"
   :long "help")
  (:name :x-size
   :description "width of text output"
   :short #\w
   :long "width"
   :arg-parser #'parse-integer
   :meta-var "NUM")
  (:name :y-size
   :description "height of text output"
   :short #\h
   :long "height"
   :arg-parser #'parse-integer
   :meta-var "NUM"))

(defun show-help ()
  (unix-opts:describe 
    :prefix (format nil "cl-image2text~A~%(C) Ivan Podmazov" 
                    (if *version* (concatenate 'string " v" *version*) ""))
    :usage-of "image2text" :args "FILE"))

(defun main (&rest argv)
  (multiple-value-bind (options free-args) (unix-opts:get-opts argv)
    (if (or (null free-args) (getf options :help))
      (show-help)
      (if (rest free-args)
        (format t "Error: too many arguments supplied.")
        (image2text (first free-args) 
                    :x (getf options :x-size) :y (getf options :y-size))))))

;;; vim: set ft=lisp lisp:
